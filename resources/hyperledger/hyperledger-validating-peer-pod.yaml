apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ${config['hyperledger.peernode']}
  namespace: ${config['hyperledger.namespace']}
  labels:
    app: hyperledger-fabric
    role: validating-peer
spec:
  replicas: 1
  selector:
    matchLabels:
      name: ${config['hyperledger.peernode']}
      app: hyperledger-fabric
      role: validating-peer
  template:
    metadata:
      name: ${config['hyperledger.peernode']}
      labels:
        name: ${config['hyperledger.peernode']}
        app: hyperledger-fabric
        role: validating-peer
      annotations:
        scheduler.alpha.kubernetes.io/affinity: >
            {
              "podAntiAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [ "hyperledger-fabric" ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                 }
                ]
               }
             }
    spec:
      restartPolicy: Always
      containers:
        - name: hyperledger-validating-peer-node
          image: hyperledger/fabric-peer:latest
          env:
            - name: CORE_PEER_ID
              value: "${config['hyperledger.peernode']}"
            - name: CORE_PEER_ADDRESS
              value: "${config['hyperledger.peernode']}:7051"
            - name: CORE_PEER_ADDRESSAUTODETECT
              value: "true"
            - name: CORE_PEER_NETWORKID
              value: "dev"
            - name: CORE_LOGGING_LEVEL
              value: "${config['hyperledger.loglevel']}"
            - name: CORE_SECURITY_ENABLED
              value: "true"
            - name: CORE_SECURITY_PRIVACY
              value: "true"
            - name: CORE_SECURITY_ENROLLID
              value: "test_${config['hyperledger.peernode']}"
            - name: CORE_SECURITY_ENROLLSECRET
              value: "${config['hyperledger.secrets'][config['cluster.member.id']]}"
            - name: CORE_PEER_PKI_ECA_PADDR
              value: "${config['hyperledger.membersrvc']}:7054"
            - name: CORE_PEER_PKI_TCA_PADDR
              value: "${config['hyperledger.membersrvc']}:7054"
            - name: CORE_PEER_PKI_TLSCA_PADDR
              value: "${config['hyperledger.membersrvc']}:7054"
            - name: CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN
              value: "pbft"
            - name: CORE_PBFT_GENERAL_MODE
              value: "batch"
            - name: CORE_PBFT_GENERAL_N
              value: "${config['cluster.initial.size']}"
            - name: CORE_PBFT_GENERAL_TIMEOUT_REQUEST
              value: "${config['hyperledger.app.timeout']?c}s"
            <#if !config['hyperledger.isroot']>
            - name: CORE_PEER_DISCOVERY_ROOTNODE
              value: "${config['hyperledger.rootnode']}:7051"
            </#if>
          args:
            - peer
            - node
            - start
          ports:
            - containerPort: 7050
            - containerPort: 7051
            - containerPort: 7052
            - containerPort: 7053
